services:
  backend:
    build:
      context: ../uhok-backend
      dockerfile: Dockerfile
    image: uhok-backend:0.2.0
    container_name: uhok-backend
    env_file:
      - ../uhok-backend/.env
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    extra_hosts:
      - "host.docker.internal:host-gateway"
    expose:
      - "9000"
    healthcheck:
      # /healthz 없으면 /openapi.json 혹은 /docs 등으로 변경
      test: ["CMD-SHELL", "wget -qO- http://localhost:9000/api/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
    networks:
      - app_net
    restart: unless-stopped

  frontend:
    build:
      context: ../uhok-frontend
      dockerfile: Dockerfile
    image: uhok-frontend:1.0.0
    container_name: uhok-frontend
    expose:
      - "80"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - app_net
    restart: unless-stopped

  ml-inference:
    build:
      context: ../uhok-ml-inference
      dockerfile: Dockerfile
    image: uhok-ml-inference:0.1.0
    container_name: uhok-ml-inference
    environment:
      - HF_HOME=/models/hf_cache
      - PYTHONUNBUFFERED=1
    volumes:
      - ml_cache:/models/hf_cache
    expose:
      - "8001"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/health || exit 1"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3
    networks:
      - app_net
    restart: unless-stopped
    profiles: ["with-ml"]  # 선택적 실행을 위한 프로필

  redis:
    image: redis:7-alpine
    container_name: uhok-redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    expose:
      - "6379"     # 외부 포트 공개 금지
    networks:
      - app_net
    restart: unless-stopped
    profiles: ["with-redis"]

  nginx:
    image: nginx:1.25-alpine
    container_name: uhok-nginx
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"   # localhost:80 로 접근 (외부로 공개되는 유일한 포트)
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - app_net
    restart: unless-stopped

volumes:
  redis_data:
  ml_cache:  # ML 모델 캐시용 볼륨

networks:
  app_net:
    driver: bridge
