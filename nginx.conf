# uhok-deploy/nginx.conf (리버스 프록시, Compose 서비스명과 동기화)

# ✅ Docker Compose 서비스명 사용
upstream backend_service {
    server backend:9000;
    keepalive 32;
}
upstream frontend_service {
    server frontend:80;
    keepalive 32;
}
upstream ml_service {
    server ml-inference:8001;
    keepalive 32;
}

# (웹소켓이 있다면) 업그레이드 헤더 - http 블록 레벨에 위치
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80;
    server_name localhost api.uhok.com; # localhost, 도메인, 모든 IP 허용

    # 업로드/응답 크기
    client_max_body_size 20m;

    # ----- 공통 프록시 옵션(안정성) -----
    proxy_http_version 1.1;
    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;
    proxy_set_header Connection         "";
    proxy_read_timeout 75s;   # 롱폴링 대비
    proxy_send_timeout 30s;

    # API 프록시 (/api → backend:9000/api)
    location /api/ {
        # 웹소켓 사용 시 헤더
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        proxy_pass http://backend_service/api/;
    }

    # 결제 API 프록시 (/api/payment/ → backend:9000/api/payment/)
    location /api/payment/ {
        # 웹소켓 사용 시 헤더
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        proxy_pass http://backend_service/api/payment/;
    }

    # ML 서비스 프록시
    location /ml/ {
        proxy_pass http://ml_service/;
    }

    # 문서/스키마 프록시
    location ~ ^/(docs|redoc|openapi.json)(/.*)?$ {
        proxy_pass http://backend_service$request_uri;
    }

    # 프론트엔드 프록시 (React 앱)
    location / {
        proxy_pass http://frontend_service;
    }
}
