services:
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"   # localhost:80 로 접근 (외부로 공개되는 유일한 포트)
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_started
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks: [app_net]
    restart: unless-stopped
    logging:
      driver: json-file
      options: { max-size: "50m", max-file: "3" }

  backend:
    build:
      context: ../uhok-backend
      dockerfile: Dockerfile
    image: uhok-backend:2.0.1
    env_file:
      - ../uhok-backend/.env
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    extra_hosts:
      - "host.docker.internal:host-gateway"
    expose:
      - "9000"
    healthcheck:
      # /healthz 없으면 /openapi.json 혹은 /docs 등으로 변경
      test: ["CMD-SHELL", "python - <<'PY'\nimport urllib.request,sys\nu='http://localhost:9000/api/health'\ntry:\n  with urllib.request.urlopen(u, timeout=3) as r:\n    sys.exit(0 if r.status==200 else 1)\nexcept Exception:\n  sys.exit(1)\nPY"]
      interval: 15s
      timeout: 5s
      retries: 5
    networks: [app_net]
    restart: unless-stopped
    logging:
      driver: json-file
      options: { max-size: "50m", max-file: "3" }

  frontend:
    build:
      context: ../uhok-frontend
      dockerfile: Dockerfile
    image: uhok-frontend:3.0.0
    environment:
      - CI=false  # ESLint 경고를 오류로 처리하지 않도록 설정
    expose:
      - "80"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks: [app_net]
    restart: unless-stopped
    logging:
      driver: json-file
      options: { max-size: "50m", max-file: "3" }

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    expose:
      - "6379"     # 외부 포트 공개 금지
    networks: [app_net]
    restart: unless-stopped
    logging:
      driver: json-file
      options: { max-size: "50m", max-file: "3" }
    profiles: ["with-redis"]

volumes:
  redis_data:

networks:
  app_net:
    driver: bridge
